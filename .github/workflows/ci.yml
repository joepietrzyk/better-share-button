name: CI Pipeline
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        env:
          CI: true
        run: |
          npm i -g pnpm@9.12.1
          pnpm i

      - name: Lint and format
        run: |
          pnpm lint
          pnpm format

      - name: Install Firefox
        run: |
          wget -O firefox-developer.tar.bz2 "https://download-origin.cdn.mozilla.net/pub/devedition/releases/132.0b1/linux-x86_64/en-US/firefox-132.0b1.tar.bz2"
          tar -xjf firefox-developer.tar.bz2
          sudo mv firefox /opt/firefox-developer
          sudo ln -sf /opt/firefox-developer/firefox /usr/bin/firefox
          firefox --version

      - name: Install Geckodriver
        run: |
          GECKODRIVER_VERSION=v0.35.0
          wget https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz
          tar -xvzf geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/
          geckodriver --version

      - name: Build project
        run: |
          pnpm build
          pnpm package

      - name: Run tests
        env:
          FIREFOX_BINARY_PATH: /opt/firefox-developer/firefox
          GECKODRIVER_BINARY_PATH: /usr/local/bin/geckodriver
          EXTENSION_PATH_GLOB: ./output/better_share_button-*.{xpi,zip}
        run: pnpm test -- --testPathIgnorePatterns="automation/reddit.test.ts" --coverage --color

      - name: Upload code coverage report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          fail_ci_if_error: true

      - name: Upload build artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: build_artifact
          path: ./output/better_share_button-*.xpi
          if-no-files-found: error

      - name: Commit changes (if any)
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'style: Auto-format code'
          branch: ${{ github.head_ref }}

  create-release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version and timestamp
        id: version_tag
        run: |
          VERSION=$(jq -r .version < package.json)
          TIMESTAMP=$(date +%s)
          echo "TAG=v$VERSION-$TIMESTAMP" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build_artifact

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: 'Release ${{ env.TAG }}'
          body: 'Automatic release for version ${{ env.TAG }}'
          draft: false
          prerelease: false

      - name: Upload assets to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: better_share_button-*.xpi
          asset_name: better_share_button-${{ env.TAG }}.xpi
          asset_content_type: application/x-xpinstall
